---
title: "ENVS-193DS_spring-2025_final"
format: html
---

# Setting Up

```{r}

library(readr)
library(tidyverse)
library(dplyr)

sst <- read_csv("/home/jovyan/ENVS-193DS_spring-2025_final/data/SST_update2023.csv")

```

```{r storing-colors-and-theme}
# storing colors to use for species
year2018_col <- "#9CB8D9"
year2019_col <- "#779ECB"
year2020_col <- "#5284BD"
year2021_col <- "#3D6A9F"
year2022_col <- "#2F527A"
year2023_col <- "#03254c"

# storing a ggplot theme (that will be used for all ggplots)
theme_set(theme_minimal())
```


## Problem 1. 

**[A]** In part one of the results section, they tested for correlation between distance from headwater (km) and annual total nitrogen load (kg year-1) likely by using a Pearson correlation test, providing a p-value of 0.03. In part two of the results section they tested whether the average nitrogen load (kg year-1) was different between five sources with a one-way ANOVA test.


**[B]** The ANOVA test in part two includes a p-value of 0.02 and conclusion that there is no difference in means among the 5 sources. However to provide more context for the results they could also include a Cohen's d test to note the effect sizes, and individual group means with their standard errors. While the test concluded there is no significant difference among group means, the small p-value suggests that something is different. Including the effect sizes will tell the reader how different the relationships actually are and its relevance in a real world context i.e. urban land may be higher than grasslands. Providing the group means with standard errors will display how the sample means will vary and help to explain the lack of difference between means by accounting for precision.





## Problem 2. Data visualization

**[A]**
```{r}

wanted_years <- c("2018", "2019", "2020", "2021", "2022", "2023")

sst_clean <- sst |> 
  mutate(
    year = factor(year(date)),  # extracting year and converting to factor
    month = factor(
      month(date, label = TRUE), # abbreviating month name
      levels = month.abb, 
      ordered = TRUE )) |> 
  select(-date) |> # removing original date column
  filter(year %in% wanted_years) |>   # keep only the 6 years you want
  mutate(year = factor(year, levels = wanted_years)  # recode factor AFTER filtering
  ) |>
  group_by(year, month) |> 
  summarize(mean_monthly_sst = mean(temp, na.rm = TRUE), .groups = "drop") |> 
  ungroup()

slice_sample(sst_clean, n = 5)
str(sst_clean)

```
**[B]**

```{r}
ggplot(data = sst_clean,
       aes(x = month,
           y = mean_monthly_sst,
           color = as.factor(year),
           group = year)) +
  geom_point() +
  geom_line() +
  # labels
  labs(x = "Month",
       y = "Mean monthly sea surface temperature Â°C",
       color = "Year") +
  scale_color_manual(values = c(
    "2018" = year2018_col,
    "2019" = year2019_col,
    "2020" = year2020_col,
    "2021" = year2021_col,
    "2022" = year2022_col,
    "2023" = year2023_col
    )) +
  
  theme_minimal() +
  theme(
    axis.title = element_text(size = 12),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_rect(fill = "white", color = "black"),
    
    # Move legend inside the plot
    legend.position = c(0.1, 0.7),  # adjust as needed
    legend.title = element_text(size = 11, face = "bold"),
    legend.text = element_text(size = 10)
  )

```

